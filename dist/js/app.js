class DBHelper{static openDatabase(){return navigator.serviceWorker?idb.open("restaurant",1,e=>{e.createObjectStore("restaurants",{keyPath:"id"})}):Promise.resolve()}static openReviewDatabase(){return navigator.serviceWorker?idb.open("review",1,e=>{e.createObjectStore("reviews",{keyPath:"id"})}):Promise.resolve()}static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static get DATABASE_REVIEW_URL(){return"http://localhost:1337/reviews"}static fillReviewDatabase(){return fetch(DBHelper.DATABASE_REVIEW_URL).then(e=>e.json()).then(e=>(DBHelper.openReviewDatabase().then(t=>{if(!t)return;const n=t.transaction("reviews","readwrite"),r=n.objectStore("reviews");return e.forEach(e=>{r.put(e)}),n.complete}),DBHelper.getReviewFromDatabase())).catch(e=>e)}static fillRestaurantDatabase(){return fetch(DBHelper.DATABASE_URL).then(e=>e.json()).then(e=>(DBHelper.openDatabase().then(t=>{if(!t)return;const n=t.transaction("restaurants","readwrite"),r=n.objectStore("restaurants");return e.forEach(e=>{r.put(e)}),n.complete}),DBHelper.getFromDatabase())).catch(e=>e)}static getFromDatabase(){return DBHelper.openDatabase().then(e=>e.transaction("restaurants").objectStore("restaurants").getAll())}static getReviewFromDatabase(){return DBHelper.openReviewDatabase().then(e=>e.transaction("reviews").objectStore("reviews").getAll())}static fetchRestaurants(){return DBHelper.getFromDatabase()}static fetchReviews(){return DBHelper.getReviewFromDatabase()}static fetchReviewByRestaurantId(e){return console.log("hello id"),DBHelper.fetchReviews().then(t=>{return t.filter(t=>t.restaurant_id==e)})}static fetchRestaurantById(e){return DBHelper.fetchRestaurants().then(t=>{const n=t.find(t=>t.id==e);return n||"Restaurant does not exist"}).catch(e=>e)}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t){return DBHelper.fetchRestaurants().then(n=>{let r=n;return"all"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all"!=t&&(r=r.filter(e=>e.neighborhood==t)),r})}static fetchNeighborhoods(){return DBHelper.fetchRestaurants().then(e=>{console.log(e);const t=e.map((t,n)=>e[n].neighborhood);return t.filter((e,n)=>t.indexOf(e)==n)}).catch(e=>e)}static fetchCuisines(){return DBHelper.fetchRestaurants().then(e=>{const t=e.map((t,n)=>e[n].cuisine_type);return t.filter((e,n)=>t.indexOf(e)==n)}).catch(e=>e)}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/images/${e.photograph}`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}static picturesForRestaurant(e,t){const n=document.createElement("source");n.srcset=`/images/${e.id}-large.jpg`,n.media="(min-width: 860px)",t.append(n);const r=document.createElement("source");r.srcset=`/images/${e.id}-medium.jpg`,r.media="(min-width: 450px)",t.append(r);const o=document.createElement("img");o.className="restaurant-img",o.src=`${DBHelper.imageUrlForRestaurant(e)}.jpg`,o.alt=`${e.name}'s restaurant picture`,t.append(o)}static registerServiceWorker(){"serviceWorker"in navigator&&window.addEventListener("load",function(){navigator.serviceWorker.register("/sw.js").then(function(e){console.log("ServiceWorker registration successful with scope: ",e.scope)},function(e){console.log("ServiceWorker registration failed: ",e)})})}}let restaurants,neighborhoods,cuisines;!function(){function e(e){return new Promise(function(t,n){e.onsuccess=function(){t(e.result)},e.onerror=function(){n(e.error)}})}function t(t,n,r){var o,a=new Promise(function(a,s){e(o=t[n].apply(t,r)).then(a,s)});return a.request=o,a}function n(e,t,n){n.forEach(function(n){Object.defineProperty(e.prototype,n,{get:function(){return this[t][n]},set:function(e){this[t][n]=e}})})}function r(e,n,r,o){o.forEach(function(o){o in r.prototype&&(e.prototype[o]=function(){return t(this[n],o,arguments)})})}function o(e,t,n,r){r.forEach(function(r){r in n.prototype&&(e.prototype[r]=function(){return this[t][r].apply(this[t],arguments)})})}function a(e,n,r,o){o.forEach(function(o){o in r.prototype&&(e.prototype[o]=function(){return e=this[n],(r=t(e,o,arguments)).then(function(e){if(e)return new i(e,r.request)});var e,r})})}function s(e){this._index=e}function i(e,t){this._cursor=e,this._request=t}function c(e){this._store=e}function l(e){this._tx=e,this.complete=new Promise(function(t,n){e.oncomplete=function(){t()},e.onerror=function(){n(e.error)},e.onabort=function(){n(e.error)}})}function u(e,t,n){this._db=e,this.oldVersion=t,this.transaction=new l(n)}function d(e){this._db=e}n(s,"_index",["name","keyPath","multiEntry","unique"]),r(s,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]),a(s,"_index",IDBIndex,["openCursor","openKeyCursor"]),n(i,"_cursor",["direction","key","primaryKey","value"]),r(i,"_cursor",IDBCursor,["update","delete"]),["advance","continue","continuePrimaryKey"].forEach(function(t){t in IDBCursor.prototype&&(i.prototype[t]=function(){var n=this,r=arguments;return Promise.resolve().then(function(){return n._cursor[t].apply(n._cursor,r),e(n._request).then(function(e){if(e)return new i(e,n._request)})})})}),c.prototype.createIndex=function(){return new s(this._store.createIndex.apply(this._store,arguments))},c.prototype.index=function(){return new s(this._store.index.apply(this._store,arguments))},n(c,"_store",["name","keyPath","indexNames","autoIncrement"]),r(c,"_store",IDBObjectStore,["put","add","delete","clear","get","getAll","getKey","getAllKeys","count"]),a(c,"_store",IDBObjectStore,["openCursor","openKeyCursor"]),o(c,"_store",IDBObjectStore,["deleteIndex"]),l.prototype.objectStore=function(){return new c(this._tx.objectStore.apply(this._tx,arguments))},n(l,"_tx",["objectStoreNames","mode"]),o(l,"_tx",IDBTransaction,["abort"]),u.prototype.createObjectStore=function(){return new c(this._db.createObjectStore.apply(this._db,arguments))},n(u,"_db",["name","version","objectStoreNames"]),o(u,"_db",IDBDatabase,["deleteObjectStore","close"]),d.prototype.transaction=function(){return new l(this._db.transaction.apply(this._db,arguments))},n(d,"_db",["name","version","objectStoreNames"]),o(d,"_db",IDBDatabase,["close"]),["openCursor","openKeyCursor"].forEach(function(e){[c,s].forEach(function(t){t.prototype[e.replace("open","iterate")]=function(){var t,n=(t=arguments,Array.prototype.slice.call(t)),r=n[n.length-1],o=this._store||this._index,a=o[e].apply(o,n.slice(0,-1));a.onsuccess=function(){r(a.result)}}})}),[s,c].forEach(function(e){e.prototype.getAll||(e.prototype.getAll=function(e,t){var n=this,r=[];return new Promise(function(o){n.iterateCursor(e,function(e){e?(r.push(e.value),void 0===t||r.length!=t?e.continue():o(r)):o(r)})})})});var p={open:function(e,n,r){var o=t(indexedDB,"open",[e,n]),a=o.request;return a.onupgradeneeded=function(e){r&&r(new u(a.result,e.oldVersion,a.transaction))},o.then(function(e){return new d(e)})},delete:function(e){return t(indexedDB,"deleteDatabase",[e])}};"undefined"!=typeof module?(module.exports=p,module.exports.default=module.exports):self.idb=p}();var markers=[];let restaurant;var map;document.addEventListener("DOMContentLoaded",e=>{DBHelper.fillRestaurantDatabase(),DBHelper.fillReviewDatabase(),fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods().then(e=>{self.neighborhoods=e,fillNeighborhoodsHTML()}).catch(e=>{console.log(e)})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines().then(e=>{self.cuisines=e,fillCuisinesHTML()}).catch(e=>{console.log(e)})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})}),window.initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),updateRestaurants()}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),n=e.selectedIndex,r=t.selectedIndex,o=e[n].value,a=t[r].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(o,a).then(e=>{console.log(e),resetRestaurants(e),fillRestaurantsHTML()}).catch(e=>{console.log(e)})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),addMarkersToMap()}),createRestaurantHTML=(e=>{const t=document.createElement("li"),n=document.createElement("picture");t.append(n),DBHelper.picturesForRestaurant(e,n);const r=document.createElement("h2");r.innerHTML=e.name,t.append(r);const o=document.createElement("p");o.innerHTML=e.neighborhood,t.append(o);const a=document.createElement("p");a.className="restaurant-address",a.innerHTML=e.address,t.append(a);const s=document.createElement("a");return s.innerHTML="View Details",s.href=DBHelper.urlForRestaurant(e),t.append(s),t}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})}),DBHelper.registerServiceWorker(),window.initMapRestaurant=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.log(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})}),document.addEventListener("DOMContentLoaded",e=>{DBHelper.fillReviewDatabase()}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t).then(t=>(self.restaurant=t,fillRestaurantHTML(),e(null,t))).catch(e=>{console.log(e)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{console.log("this is inside fillRestaurantHTML"),document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-cuisine");t.innerHTML=e.cuisine_type;const n=document.createElement("picture");document.getElementById("restaurant-container").insertBefore(n,t),DBHelper.picturesForRestaurant(e,n),e.operating_hours&&fillRestaurantHoursHTML(),DBHelper.fetchReviewByRestaurantId(e.id).then(e=>{console.log("in review result"),self.restaurant.reviews=e,fillReviewsHTML()}).catch(e=>{console.log(e)})}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const r=document.createElement("tr"),o=document.createElement("td");o.innerHTML=n,r.appendChild(o);const a=document.createElement("td");a.innerHTML=e[n],r.appendChild(a),t.appendChild(r)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{console.log(e);const t=document.getElementById("reviews-container"),n=document.createElement("h2");if(n.innerHTML="Reviews",t.appendChild(n),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const r=document.getElementById("reviews-list");e.forEach(e=>{r.appendChild(createReviewHTML(e))}),t.appendChild(r)}),createReviewHTML=(e=>{console.log(e);const t=document.createElement("li"),n=document.createElement("p");n.innerHTML=e.name,t.appendChild(n);const r=document.createElement("p");r.innerHTML=`Rating: ${e.rating}`,t.appendChild(r);const o=document.createElement("p");return o.innerHTML=e.comments,t.appendChild(o),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb-list"),n=document.createElement("li"),r=document.createElement("a");r.innerHTML=e.name,r.href=window.location.href,r.setAttribute("aria-current","page"),n.append(r),t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}),DBHelper.registerServiceWorker();