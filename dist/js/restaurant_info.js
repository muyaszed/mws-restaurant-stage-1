let restaurant;var map;document.addEventListener("DOMContentLoaded",e=>{initMap();const t=getParameterByName("id");DBHelper.fillReviewDatabase(t)}),initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.newMap=L.map("map",{center:[t.latlng.lat,t.latlng.lng],zoom:16,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1IjoibXV5YXN6ZWQiLCJhIjoiY2prMHpkaHg3MDZlcDN0dDRxMmxxNmg2byJ9.xGd9TmhOhCxuYa4hEnVpWQ",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.newMap))})}),handleFav=(e=>{console.log(e),updateFav(e.checked),e.checked?(localStorage.setItem("favBox","true"),e.setAttribute("aria-checked","true")):(localStorage.setItem("favBox","false"),e.setAttribute("aria-checked","false"))}),updateFav=(e=>{const t=getParameterByName("id");return localStorage.setItem(`checkBox${t}`,e),fetch(`http://localhost:1337/restaurants/${t}/?is_favorite=${e}`,{method:"PUT",mode:"cors",redirect:"follow"})}),getFormInfo=(()=>{const e=document.querySelector(".review-form").getAttribute("id").slice(12),t=document.querySelector(`#input-name-${e}`),n=document.querySelector(`#input-rating-${e}`),r=document.querySelector(`#input-comment-${e}`),a={restaurant_id:parseInt(e),name:t.value,rating:parseInt(n.value),comments:r.value};return t.value="",n.value="1",r.value="",document.getElementById("reviews-container").firstElementChild.innerHTML="",document.getElementById("reviews-list").innerHTML="",a}),saveDataToIDB=((e,t)=>DBHelper.openReviewDatabase(t).then(t=>{if(!t)return;const n=t.transaction("reviews","readwrite");return n.objectStore("reviews").put(e),n.complete})),saveDataForBackgroundSync=(e=>DBHelper.openReviewDatabase("reviewSync").then(t=>{if(!t)return;const n=t.transaction("reviews","readwrite");return n.objectStore("reviews").put(e),n.complete})),setAriaClickState=(e=>{const t=[...e.children];console.log(t),t.forEach(e=>{e.selected?e.setAttribute("aria-selected","true"):e.setAttribute("aria-selected","false")})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t).then(t=>(self.restaurant=t,fillRestaurantHTML(),e(null,t))).catch(e=>{console.log(e)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-cuisine");t.innerHTML=e.cuisine_type;const n=document.createElement("picture");document.getElementById("restaurant-container").insertBefore(n,t);const r=document.createElement("input");r.setAttribute("id",`checkBox${e.id}`),r.setAttribute("type","checkbox"),r.setAttribute("aria-checked","false"),r.setAttribute("onchange","handleFav(this)");const a=JSON.parse(localStorage.getItem(`checkBox${e.id}`));r.checked=a,document.getElementById("favorite").appendChild(r),DBHelper.picturesForRestaurant(e,n),e.operating_hours&&fillRestaurantHoursHTML(),DBHelper.getReviewFromDatabase(e.id).then(e=>{self.restaurant.reviews=e,fillReviewsHTML()}).catch(e=>{console.log(e)}),fillReviewFormHTML()}),fillReviewFormHTML=((e=self.restaurant)=>{const t=document.getElementById("reviews-form"),n=document.createElement("form"),r=document.createElement("input"),a=document.createElement("label"),i=document.createElement("select"),o=document.createElement("label"),l=document.createElement("textarea"),c=document.createElement("label"),s=document.createElement("input");["1","2","3","4","5"].forEach(e=>{let t=document.createElement("option");t.setAttribute("value",e),t.setAttribute("aria-selected","false"),t.innerHTML=e,i.appendChild(t)}),n.setAttribute("id",`review-form-${e.id}`),n.setAttribute("class","review-form"),r.setAttribute("type","text"),r.setAttribute("id",`input-name-${e.id}`),a.setAttribute("for",`input-name-${e.id}`),a.innerHTML="Name:",i.setAttribute("name","ratings"),i.setAttribute("role","listbox"),i.setAttribute("onchange","setAriaClickState(this)"),i.setAttribute("id",`input-rating-${e.id}`),i.firstChild.setAttribute("aria-selected","true"),o.setAttribute("for",`input-rating-${e.id}`),o.innerHTML="Rating:",l.setAttribute("name","ratings"),l.setAttribute("id",`input-comment-${e.id}`),c.setAttribute("for",`input-comment-${e.id}`),c.innerHTML="Comment:",s.setAttribute("type","submit"),s.setAttribute("value","submit"),n.appendChild(a);let d=document.createElement("br");n.appendChild(d),n.appendChild(r),d=document.createElement("br"),n.appendChild(d),d=document.createElement("br"),n.appendChild(d),n.appendChild(o),d=document.createElement("br"),n.appendChild(d),n.appendChild(i),d=document.createElement("br"),n.appendChild(d),d=document.createElement("br"),n.appendChild(d),n.appendChild(c),d=document.createElement("br"),n.appendChild(d),n.appendChild(l),d=document.createElement("br"),n.appendChild(d),d=document.createElement("br"),n.appendChild(d),n.appendChild(s),t.appendChild(n),n.addEventListener("submit",t=>{t.preventDefault();const n=getFormInfo();saveDataForBackgroundSync(n),DBHelper.getReviewFromDatabase(e.id).then(e=>{self.restaurant.reviews=e,fillReviewsHTML()}).catch(e=>{console.log(e)}),DBHelper.getReviewFromDatabase("reviewSync").then(e=>{e.forEach(e=>{console.log(e);const t=createReviewHTML(e);document.getElementById("reviews-list").appendChild(t)})}),navigator.serviceWorker.ready.then(function(e){console.log("hello"),e.sync.register("addReview")})})}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const r=document.createElement("tr"),a=document.createElement("td");a.innerHTML=n,r.appendChild(a);const i=document.createElement("td");i.innerHTML=e[n],r.appendChild(i),t.appendChild(r)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container"),n=document.createElement("h2");if(n.innerHTML="Reviews",t.appendChild(n),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const r=document.getElementById("reviews-list");e.forEach(e=>{r.appendChild(createReviewHTML(e))}),t.appendChild(r)}),createReviewHTML=(e=>{const t=document.createElement("li"),n=document.createElement("p");n.innerHTML=e.name,t.appendChild(n);const r=document.createElement("p");r.innerHTML=`Rating: ${e.rating}`,t.appendChild(r);const a=document.createElement("p");return a.innerHTML=e.comments,t.appendChild(a),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb-list"),n=document.createElement("li"),r=document.createElement("a");r.innerHTML=e.name,r.href=window.location.href,r.setAttribute("aria-current","page"),n.append(r),t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}),DBHelper.registerServiceWorker();